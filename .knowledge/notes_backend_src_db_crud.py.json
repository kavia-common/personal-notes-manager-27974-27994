{"is_source_file": true, "format": "Python", "description": "This file defines CRUD operations for 'notes' in a database backend, including functions to get, create, update, and delete notes using SQLAlchemy ORM models and schemas.", "external_files": ["src/db/models", "src/db/schemas"], "external_methods": ["sqlalchemy.orm.Session.query", "sqlalchemy.orm.Session.add", "sqlalchemy.orm.Session.commit", "sqlalchemy.orm.Session.refresh", "sqlalchemy.orm.Session.delete", "models.Note", "NoteCreate", "NoteUpdate"], "published": ["get_notes", "get_note", "create_note", "update_note", "delete_note"], "classes": [], "methods": [{"name": "List[models.Note] get_notes(db: Session, skip: int = 0, limit: int = 100)", "description": "Retrieve a paginated list of notes from the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Note] get_note(db: Session, note_id: int)", "description": "Retrieve a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "models.Note create_note(db: Session, note_in: NoteCreate)", "description": "Create and persist a new note in the database.", "scope": "", "scopeKind": ""}, {"name": "models.Note update_note(db: Session, note_db: models.Note, note_in: NoteUpdate)", "description": "Update fields of an existing note based on provided data.", "scope": "", "scopeKind": ""}, {"name": "None delete_note(db: Session, note_db: models.Note)", "description": "Remove a note from the database.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["crud", "notes", "database", "SQLAlchemy", "models.Note", "schemas.NoteCreate", "schemas.NoteUpdate"], "state": 2, "file_id": 9, "knowledge_revision": 25, "git_revision": "5c18c2de3b26a38d684ead647db9793e9e49ba6d", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/db/crud.py", "pattern": "/^def create_note(db: Session, note_in: NoteCreate) -> models.Note:$/", "language": "Python", "typeref": "typename:models.Note", "kind": "function", "signature": "(db: Session, note_in: NoteCreate)"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/db/crud.py", "pattern": "/^def delete_note(db: Session, note_db: models.Note) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Session, note_db: models.Note)"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/db/crud.py", "pattern": "/^def get_note(db: Session, note_id: int) -> Optional[models.Note]:$/", "language": "Python", "typeref": "typename:Optional[models.Note]", "kind": "function", "signature": "(db: Session, note_id: int)"}, {"_type": "tag", "name": "get_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/db/crud.py", "pattern": "/^def get_notes(db: Session, skip: int = 0, limit: int = 100) -> List[models.Note]:$/", "language": "Python", "typeref": "typename:List[models.Note]", "kind": "function", "signature": "(db: Session, skip: int = 0, limit: int = 100)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/db/crud.py", "pattern": "/^def update_note(db: Session, note_db: models.Note, note_in: NoteUpdate) -> models.Note:$/", "language": "Python", "typeref": "typename:models.Note", "kind": "function", "signature": "(db: Session, note_db: models.Note, note_in: NoteUpdate)"}], "hash": "78e91da76d4cac10df1fc8b3b9bba90d", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/db/crud.py", "revision_history": [{"25": "5c18c2de3b26a38d684ead647db9793e9e49ba6d"}]}