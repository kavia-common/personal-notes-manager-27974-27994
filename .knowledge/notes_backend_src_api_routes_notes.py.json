{"is_source_file": true, "format": "Python", "description": "This file defines API route handlers for managing 'notes' in a FastAPI application. It includes endpoints for listing, creating, retrieving, updating, and deleting notes, leveraging SQLAlchemy ORM models and Pydantic schemas.", "external_files": ["src/db/session.py", "src/db/crud.py", "src/db/models.py", "src/db/schemas.py"], "external_methods": ["crud.get_notes", "crud.create_note", "crud.get_note", "crud.update_note", "crud.delete_note", "get_db"], "published": ["list_notes", "create_note", "get_note", "update_note", "delete_note"], "classes": [], "methods": [{"name": "List[NoteOut] list_notes( skip: int = Query(0, ge=0, description=\"Number of records to skip for pagination\"), limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of records to return\"), db: Session = Depends(get_db), )", "description": "Handles GET requests to list notes with pagination.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note(note_in: NoteCreate, db: Session = Depends(get_db))", "description": "Handles POST requests to create a new note.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note( note_id: int = Path(..., ge=1, description=\"ID of the note to retrieve\"), db: Session = Depends(get_db), )", "description": "Handles GET requests to retrieve a specific note by ID.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note( note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), note_in: NoteUpdate = ..., db: Session = Depends(get_db), )", "description": "Handles PUT requests to update an existing note by ID.", "scope": "", "scopeKind": ""}, {"name": "None delete_note( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), db: Session = Depends(get_db), )", "description": "Handles DELETE requests to remove a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["crud.get_notes", "crud.create_note", "crud.get_note", "crud.update_note", "crud.delete_note", "get_db"], "search-terms": ["notes API endpoints", "FastAPI notes routes", "Note CRUD handlers", "notes.py route definitions"], "state": 2, "file_id": 11, "knowledge_revision": 33, "git_revision": "634cbfdaf2ec9aa8aa739f9b5b98b6a8a50ab10d", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^def create_note(note_in: NoteCreate, db: Session = Depends(get_db)) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(note_in: NoteCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^def delete_note($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^def get_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to retrieve\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^def list_notes($/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "( skip: int = Query(0, ge=0, description=\"Number of records to skip for pagination\"), limit: int = Query(100, ge=1, le=1000, description=\"Maximum number of records to return\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^router = APIRouter(prefix=\"\\/notes\", tags=[\"notes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-27974-27994/notes_backend/src/api/routes/notes.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), note_in: NoteUpdate = ..., db: Session = Depends(get_db), )"}], "hash": "38817215925258084d7c11ce3adb32cb", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes/notes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/notes\", tags=[\"notes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"33": "634cbfdaf2ec9aa8aa739f9b5b98b6a8a50ab10d"}]}